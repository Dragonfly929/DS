{
	"info": {
		"_postman_id": "example-id",
		"name": "ColorPaletteAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "example-exporter-id"
	},
	"item": [
		{
			"name": "User Service",
			"item": [
				{
					"name": "Register a new user",
					"request": {
						"method": "POST",
						"body": {
							"mode": "raw",
							"raw": "{ \"name\": \"User Name\", \"email\": \"user@example.com\", \"password\": \"user_password\" }",
							"options": { "raw": { "language": "json" } }
						},
						"url": {
							"raw": "http://localhost:5000/api/users/register",
							"protocol": "http",
							"host": ["localhost"],
							"port": "5000",
							"path": ["api", "users", "register"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });",
									"pm.test(\"Response has user ID\", function () { var jsonData = pm.response.json(); pm.expect(jsonData).to.have.property(\"id\"); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				},
				{
					"name": "Authenticate user and issue JWT",
					"request": {
						"method": "POST",
						"body": {
							"mode": "raw",
							"raw": "{ \"email\": \"user@example.com\", \"password\": \"user_password\" }",
							"options": { "raw": { "language": "json" } }
						},
						"url": {
							"raw": "http://localhost:5000/api/users/login",
							"protocol": "http",
							"host": ["localhost"],
							"port": "5000",
							"path": ["api", "users", "login"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Response has JWT token\", function () { var jsonData = pm.response.json(); pm.expect(jsonData).to.have.property(\"token\"); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				}
			]
		},
		{
			"name": "Palette Service",
			"item": [
				{
					"name": "Create a new color palette",
					"request": {
						"method": "POST",
						"body": {
							"mode": "raw",
							"raw": "{ \"user_id\": \"1\", \"name\": \"Spring Vibes\", \"colors\": [\"#FF5733\", \"#C70039\", \"#900C3F\", \"#581845\"] }",
							"options": { "raw": { "language": "json" } }
						},
						"url": {
							"raw": "http://localhost:5000/api/palettes",
							"protocol": "http",
							"host": ["localhost"],
							"port": "5000",
							"path": ["api", "palettes"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });",
									"pm.test(\"Palette created with ID\", function () { var jsonData = pm.response.json(); pm.expect(jsonData).to.have.property(\"id\"); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				},
				{
					"name": "Retrieve all color palettes",
					"request": {
						"method": "GET",
						"url": {
							"raw": "http://localhost:5000/api/palettes",
							"protocol": "http",
							"host": ["localhost"],
							"port": "5000",
							"path": ["api", "palettes"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Response is an array\", function () { var jsonData = pm.response.json(); pm.expect(jsonData).to.be.an('array'); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				}
			]
		}
	]
}
